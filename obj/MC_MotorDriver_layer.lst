C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MC_MOTORDRIVER_LAYER
OBJECT MODULE PLACED IN .\obj\MC_MotorDriver_layer.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE User\Source\MC_MotorDriver_layer.c LARGE OMF2 WARNINGLEVEL(0) OPTIMIZE(S
                    -IZE) BROWSE NOAREGS INCDIR(.\Library\Include;.\User\Include) DEBUG PRINT(.\obj\MC_MotorDriver_layer.lst) TABS(2) OBJECT(
                    -.\obj\MC_MotorDriver_layer.obj)

line level    source

   1          
   2          /************************ (C) COPYRIGHT 2015 FT *******************************
   3          * File Name          : 
   4          * Author             : Application Team  Tom.wang 
   5          * Version            : V2.0.0
   6          * Date               : 06/15/2015
   7          * Description        : 
   8          ********************************************************************************
   9          /*******************************************************************************
  10          * All Rights Reserved
  11          *******************************************************************************/
  12          
  13          /* Includes ------------------------------------------------------------------*/
  14          #include <FU68xx.h>
  15          #include <Myproject.h>
  16          
  17          /* Private typedef -----------------------------------------------------------*/
  18          /* Private define ------------------------------------------------------------*/
  19          /* Private macro -------------------------------------------------------------*/
  20          /* Private variables ---------------------------------------------------------*/
  21          DRV_TypeDef xdata Drv; 
  22          extern uc16 DRV_SECTION2OCM[8];
  23          
  24          /* Private function prototypes -----------------------------------------------*/
  25          u8 Drv_Commutation(u8 Step);                //换相
  26          u16 Drv_SpeedRampCale(u16 refTar);          //闭环加减速曲线
  27          u16 Drv_DutyRampCale(u16 tduty);            //开环加减速曲线
  28          u16 Fu68xx_PWM_Update(u16 tduty);           //PWM更新
  29          void Drv_SetStep(void);                     //
  30          void Drv_HallDriveD(u8 Step);               //HALL中断直接换相
  31          u8 Drv_SelfInspection(u8 Num,float Value1,float Value2);//mos自检
  32          /* Private functions ---------------------------------------------------------*/
  33          
  34          /*******************************************************************************
  35          * Function Name  : Drv_Commutation 换相  TIM1_DBR -> TIM1_DR
  36          * Description    : 换相模块，根据电机转子扇
  37          * Input          : 换相扇区
  38          * Output         : None
  39          * Return         : 1
  40          *******************************************************************************/
  41          u8 Drv_Commutation(u8 Step)
  42          {
  43   1        //变量定义，需要初始化 3.3.3
  44   1        Ctl.Step = Step;
  45   1        
  46   1        if(Ctl.StepPre != Ctl.Step)
  47   1        {
  48   2          Ctl.StepPre = Ctl.Step; 
  49   2          if((Ctl.State == MOTOR_NORMAL)||(Ctl.State == MOTOR_OPENLOOP)||(Ctl.State == MOTOR_PRECHARGE))
  50   2          {
  51   3            TIM1_DBR = DRV_SECTION2OCM[Ctl.Step];
  52   3          }
  53   2        }
C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 2   

  54   1      
  55   1        return 1;
  56   1      } 
  57          
  58          
  59          /*******************************************************************************
  60          * Function Name  : Drv_SpeedRampCale 闭环加减速曲线
  61          * Description    : 速度闭环加减速曲线 开环无效
  62          * Input          : 目标速度 refTar _IQ15格式
  63          * Output         : 给定速度 refCur _IQ15格式
  64          * Return         : 给定速度 refCur _IQ15格式
  65          *******************************************************************************/
  66          u16 Drv_SpeedRampCale(u16 refTar)
  67            {
  68   1          u16 refCur = 0;
  69   1            
  70   1          refCur = Ctl.spd.refCur;
  71   1            
  72   1          if(refCur < refTar)
  73   1          {
  74   2            refCur += Ctl.spd.IncValue;
  75   2          }
  76   1          else if(refCur > refTar)
  77   1          {
  78   2            refCur -= Ctl.spd.DecValue;
  79   2          }
  80   1          else
  81   1          {
  82   2            refCur = Ctl.spd.refTar;
  83   2          }
  84   1          
  85   1          return refCur;
  86   1        }
  87          
  88          /*******************************************************************************
  89          * Function Name  : Drv_DutyRampCale 
  90          * Description    : 计算频率，每次斩波计算一次 
  91          * Input          : 目标DUTY  格式_IQ15 即0x7FFF
  92          * Output         : 当前DUTY  格式_IQ15 即0x7FFF
  93          * Return         : 当前DUTY  格式_IQ15 即0x7FFF       
  94          *******************************************************************************/
  95          u16 Drv_DutyRampCale(u16 tduty)
  96          {
  97   1        if(((s32)Drv.PWM.DutyCurrent - (s32)Drv.PWM.Dutytarget) > Drv.PWM.DutyDecValue)
  98   1        {
  99   2          Drv.PWM.DutyCurrent -= Drv.PWM.DutyDecValue;
 100   2        }
 101   1        else if(((s32)Drv.PWM.Dutytarget - (s32)Drv.PWM.DutyCurrent) > Drv.PWM.DutyIncValue) 
 102   1        {
 103   2          Drv.PWM.DutyCurrent += Drv.PWM.DutyIncValue;  
 104   2        }
 105   1        else
 106   1        {
 107   2          Drv.PWM.DutyCurrent = Drv.PWM.Dutytarget;
 108   2        }
 109   1      
 110   1        return Drv.PWM.DutyCurrent ;
 111   1      }
 112          
 113          /*******************************************************************************
 114          * Function Name  : Fu68xx_PWM_Update
 115          * Description    : PWM更新模块，每次斩波更新，实时更新
C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 3   

 116          * Input          : _IQ15 格式duty
 117          * Output         : TIM2_DR
 118          * Return         : TIM2_DR
 119          *******************************************************************************/
 120          u16 Fu68xx_PWM_Update(u16 tduty)
 121          {
 122   1        u16 temp;
 123   1        #if(CURRENT_LIMIT_EN)                             //限流使能
                if(Drv.PWM.DutyLimitFlag == 0x7F)                 //输出限制
                {
                  Drv.PWM.DutyMax -= Drv.PWM.DutyLimitADD;
                  if(Drv.PWM.DutyMax < 3276)
                  {
                    Drv.PWM.DutyMax = 3276;
                  }
                }
                else
                {
                  if((Drv.PWM.DutyMax+Drv.PWM.DutyLimitADD) < MOTOR_VS_MAX)
                  {
                    Drv.PWM.DutyMax += Drv.PWM.DutyLimitADD;
                  }
                }    
                #endif
 140   1        tduty +=10;
 141   1        if(tduty > Drv.PWM.DutyMax)
 142   1        {
 143   2          tduty = Drv.PWM.DutyMax;
 144   2        }
 145   1        else if(tduty < Drv.PWM.DutyMin)
 146   1        {
 147   2          tduty = Drv.PWM.DutyMin;
 148   2        }
 149   1        
 150   1        MDUControl.DutyCurrent = tduty;
 151   1        MDUControl.FlagPWMDuty = 0x7F;
 152   1      
 153   1        return MDUControl.DutyCurrent;
 154   1      }
 155          
 156          /*******************************************************************************
 157          * Function Name  : Drv_SetStep    
 158          * Description    : 换相设置
 159          * Input          : None
 160          * Output         : None
 161          * Return         : None
 162          *******************************************************************************/
 163          void Drv_SetStep(void)
 164          {
 165   1        s8 TempCCW,TempCW;
 166   1        if(POSITION_FB_MODE == SENSORLESS )  
 167   1        {
 168   2          TempCCW = CCW;
 169   2          TempCW = CW;
 170   2        }
 171   1        else
 172   1        {
 173   2          if(HALLADVANCEFIX)
 174   2          {
 175   3            TempCCW = CCW;
 176   3            TempCW = CW;
 177   3          }
C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 4   

 178   2          else
 179   2          {
 180   3            TempCCW = CW;
 181   3            TempCW = CCW;
 182   3          }
 183   2        }
 184   1        if (Ctl.direction == TempCW)
 185   1        {
 186   2          if(Ctl.Step < 6)
 187   2          {
 188   3            Ctl.Step ++;
 189   3          }
 190   2          else 
 191   2          {
 192   3            Ctl.Step = 1;
 193   3          }
 194   2        }
 195   1        else if (Ctl.direction == TempCCW)
 196   1        {
 197   2          if(Ctl.Step > 1)
 198   2          {
 199   3            Ctl.Step --;
 200   3          }  
 201   2          else
 202   2          {
 203   3            Ctl.Step = 6;
 204   3          }
 205   2        }
 206   1      }
 207          
 208          /*******************************************************************************
 209          * Function Name  : Drv_HallDriveD    
 210          * Description    : hall中断来了，直接换相 不超前不滞后
 211          * Input          : None
 212          * Output         : None
 213          * Return         : None
 214          *******************************************************************************/
 215          void Drv_HallDriveD(u8 Step)
 216          {
 217   1        Ctl.Step = Step;
 218   1      
 219   1        if(Ctl.StepPre != Ctl.Step)
 220   1        {
 221   2          Ctl.StepPre = Ctl.Step; 
 222   2          if((Ctl.State == MOTOR_NORMAL)||(Ctl.State == MOTOR_PRECHARGE))
 223   2          {
 224   3            SetBit(TIM1_CR3,OPS0,0);              //软件写DBR触发换相
 225   3            TIM1_DBR = DRV_SECTION2OCM[Ctl.Step];
 226   3            Drv.Hall.u8ChangePhaseFlag = 0xFF;  
 227   3          }
 228   2        }   
 229   1      }
 230          
 231          
 232          
 233          
 234          /*******************************************************************************
 235          * Function Name  : Drv_SelfInspection  self-inspection system  
 236          * Description    : 
 237          * Input          : None      AB  A={1,2,3,4,5,6}  B={1,2}  A=管子  B =1 短路 2断路
 238          * Output         : None      0.6 0.1
 239          * Return         : None     Drv_SelfInspection(1,0.6,0.1)
C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 5   

 240          *******************************************************************************/
 241          u8 Drv_SelfInspection(u8 Num,float Value1,float Value2)
 242          {
 243   1      
 244   1        u16 VbusShortValue,VbusPoenValue;
 245   1        u8 tValue,i;
 246   1      
 247   1        tValue = 0;
 248   1        VbusShortValue = Drv.AdcMeas.VdcMeas *Value1;
 249   1        VbusPoenValue = Drv.AdcMeas.VdcMeas *Value2;
 250   1      
 251   1        SetBit(ADC_CFG, ADTRIGEN, 0); 
 252   1        //================================================
 253   1        //UH VH WH 断路检测  
 254   1        EA = 0;
 255   1        PWMOUT_OFF;
 256   1        ADCGetFastValue();                      //ADC数据读取 
 257   1        if((Drv.AdcMeas.VmeasA > VbusShortValue)||(Drv.AdcMeas.VmeasB > VbusShortValue)||(Drv.AdcMeas.VmeasC > V
             -busShortValue))
 258   1        {
 259   2          tValue = 0XFF;              //UVW 有短路
 260   2          goto MOSFETerror;
 261   2        }
 262   1        else
 263   1        {
 264   2          tValue = 0;
 265   2        }
 266   1        EA = 1;
 267   1       
 268   1        Delay(100); 
 269   1        //================================================
 270   1        //UH VH WH 开路检测 
 271   1        //UL VL WL 短路检测
 272   1        //-----------
 273   1        //UH 断路检测 UL短路检测 
 274   1        EA = 0;
 275   1        for(i=0;i < Num;i++)
 276   1        {            
 277   2          PWM_UH_ON;
 278   2          FastADConvert();                     
 279   2          PWMOUT_OFF;
 280   2          ADCGetFastValue();                      //ADC数据读取 
 281   2          if(Drv.AdcMeas.VmeasA < VbusPoenValue)
 282   2          {
 283   3            tValue = 0x12;         //UH 断路
 284   3            goto MOSFETerror;
 285   3          }
 286   2          else if(Drv.AdcMeas.VmeasA < VbusShortValue)
 287   2          {
 288   3            tValue = 0x21;         //UL 有短路
 289   3            goto MOSFETerror;
 290   3          }
 291   2          else
 292   2          {
 293   3            tValue = 0;
 294   3          }    
 295   2          Delay(100);
 296   2        }
 297   1        EA = 1; 
 298   1        //-----------
 299   1        //VH 断路检测 VL短路检测 
 300   1        EA = 0;
C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 6   

 301   1        for(i=0;i < Num;i++)
 302   1        {
 303   2          PWM_VH_ON;
 304   2          FastADConvert();
 305   2          PWMOUT_OFF;
 306   2          ADCGetFastValue();                      //ADC数据读取 
 307   2          
 308   2          if(Drv.AdcMeas.VmeasB < VbusPoenValue)
 309   2          {
 310   3            tValue = 0x32;         //VH 断路
 311   3            goto MOSFETerror;
 312   3          }
 313   2          else if(Drv.AdcMeas.VmeasB < VbusShortValue)
 314   2          {
 315   3            tValue = 0x41;         //VL 有短路
 316   3            goto MOSFETerror;
 317   3          }
 318   2          else
 319   2          {
 320   3            tValue = 0;
 321   3          }   
 322   2        
 323   2          Delay(100);
 324   2        }
 325   1        EA = 1; 
 326   1        //-----------
 327   1        //WH 断路检测 WL短路检测 
 328   1        EA = 0;
 329   1        for(i=0;i < Num;i++)
 330   1        {
 331   2      
 332   2          PWM_WH_ON;
 333   2          FastADConvert();
 334   2          PWMOUT_OFF;
 335   2          ADCGetFastValue();                      //ADC数据读取
 336   2          
 337   2          if(Drv.AdcMeas.VmeasC < VbusPoenValue)
 338   2          {
 339   3            tValue = 0x52;         //WH 断路
 340   3            goto MOSFETerror;
 341   3          }
 342   2          else if(Drv.AdcMeas.VmeasC < VbusShortValue)
 343   2          {
 344   3            tValue = 0x61;         //WL 有短路
 345   3            goto MOSFETerror;
 346   3          }
 347   2          else
 348   2          {
 349   3            tValue = 0;
 350   3          }    
 351   2          Delay(100);
 352   2        }
 353   1        EA = 1; 
 354   1      
 355   1        //================================================
 356   1        //UL VL WL 开路检测 
 357   1        //-----------
 358   1        //UL 开路检测  
 359   1        EA = 0;
 360   1        for(i=0;i < Num;i++)
 361   1        {            
 362   2          PWM_UH_ON;
C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 7   

 363   2          PWM_UL_ON;
 364   2          FastADConvert();                     
 365   2          PWMOUT_OFF;
 366   2          ADCGetFastValue();                      //ADC数据读取 
 367   2          if(Drv.AdcMeas.VmeasA > VbusShortValue>>1)
 368   2          {
 369   3            tValue = 0x22;         //UL 有开路
 370   3            goto MOSFETerror;
 371   3          }
 372   2          else
 373   2          {
 374   3            tValue = 0;
 375   3          }    
 376   2          Delay(100);
 377   2        }
 378   1        EA = 1; 
 379   1        //-----------
 380   1        //VL 开路检测
 381   1        EA = 0;
 382   1        for(i=0;i < Num;i++)
 383   1        {            
 384   2          PWM_VH_ON;
 385   2          PWM_VL_ON;
 386   2          FastADConvert();                      
 387   2          PWMOUT_OFF;
 388   2          ADCGetFastValue();                      //ADC数据读取 
 389   2          if(Drv.AdcMeas.VmeasB > VbusShortValue>>1)
 390   2          {
 391   3            tValue = 0x42;         //VL 有开路
 392   3            goto MOSFETerror;
 393   3          }
 394   2          else
 395   2          {
 396   3            tValue = 0;
 397   3          }    
 398   2          Delay(100);
 399   2        }
 400   1        EA = 1; 
 401   1        //-----------
 402   1        //WL 开路检测
 403   1        EA = 0;
 404   1        for(i=0;i < Num;i++)
 405   1        {            
 406   2          PWM_WH_ON;
 407   2          PWM_WL_ON;
 408   2          FastADConvert();                      
 409   2          PWMOUT_OFF;
 410   2          ADCGetFastValue();                      //ADC数据读取 
 411   2          if(Drv.AdcMeas.VmeasC > VbusShortValue>>1)
 412   2          {
 413   3            tValue = 0x62;         //WL 有开路
 414   3            goto MOSFETerror;
 415   3          }
 416   2          else
 417   2          {
 418   3            tValue = 0;
 419   3          }    
 420   2          Delay(100);
 421   2        }
 422   1        EA = 1;   
 423   1        
 424   1        MOSFETerror: 
C51 COMPILER V9.52.0.0   MC_MOTORDRIVER_LAYER                                              08/07/2017 14:18:19 PAGE 8   

 425   1        SetBit(ADC_CFG, ADTRIGEN, 1);   
 426   1        return tValue;
 427   1      }
 428          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1414    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    174      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
