C51 COMPILER V9.52.0.0   MC_KEY                                                            08/07/2017 14:18:19 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MC_KEY
OBJECT MODULE PLACED IN .\obj\MC_Key.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE User\Source\MC_Key.c LARGE OMF2 WARNINGLEVEL(0) OPTIMIZE(SIZE) BROWSE NO
                    -AREGS INCDIR(.\Library\Include;.\User\Include) DEBUG PRINT(.\obj\MC_Key.lst) TABS(2) OBJECT(.\obj\MC_Key.obj)

line level    source

   1          
   2          /************************ (C) COPYRIGHT 2015 FT *******************************
   3          * File Name          : 
   4          * Author             : Application Team  Tom.wang 
   5          * Version            : V2.0.0
   6          * Date               : 06/15/2015
   7          * Description        : 
   8          ********************************************************************************
   9          /*******************************************************************************
  10          * All Rights Reserved
  11          *******************************************************************************/
  12          
  13          /* Includes ------------------------------------------------------------------*/
  14          #include <FU68xx.h>
  15          #include "sys_conf.h"
  16          #include "MC_MotorCotrol_layer.h"  
  17          #include "MC_key.h"
  18          
  19          
  20          /** @addtogroup FT68xx
  21            * @{
  22            */
  23          
  24          /* Private typedef -----------------------------------------------------------*/
  25          /* Private define ------------------------------------------------------------*/
  26          #define X0_EN                  0         
  27          #define X1_EN                  1
  28          #define X2_EN                  0
  29          #define X3_EN                  0
  30          
  31          #define X3_GPIO_PIN           GP03
  32          #define X2_GPIO_PIN           GP02
  33          #define X1_GPIO_PIN           GP01
  34          #define X0_GPIO_PIN           GP00
  35          /* Private macro -------------------------------------------------------------*/
  36          /* Private variables ---------------------------------------------------------*/
  37          key_TypeDef xdata X0;
  38          key_TypeDef xdata X1;
  39          key_TypeDef xdata X2;
  40          key_TypeDef xdata X3;
  41          
  42          u8  xdata u8KeyForbid;            //按键禁止标志
  43          
  44          /* Private function prototypes -----------------------------------------------*/
  45          void Key_Config(void);
  46          void Key_init(void);
  47          void Key_Filtrate(void);
  48          /* Private functions ---------------------------------------------------------*/
  49          
  50          void Key_Config(void)
  51          {
  52   1      //端子设置 X1设置输入
  53   1        #if(X0_EN)
                SetBit(P0_OE,P00,0); //输入使能
C51 COMPILER V9.52.0.0   MC_KEY                                                            08/07/2017 14:18:19 PAGE 2   

                SetBit(P0_PU,P00,1); //上拉电阻
                #endif
  57   1        #if(X1_EN)
  58   1        SetBit(P0_OE,P01,0); //输入使能
  59   1        SetBit(P0_PU,P01,1); //上拉电阻
  60   1        #endif
  61   1        #if(X2_EN)
                SetBit(P0_OE,P02,0); //输入使能
                SetBit(P0_PU,P02,1); //上拉电阻
                #endif
  65   1        #if(X3_EN)
                SetBit(P0_OE,P03,0); //输入使能
                SetBit(P0_PU,P03,1); //上拉电阻
                #endif
  69   1      }
  70          void Key_init(void)
  71          {
  72   1        X0.XCount = 0;
  73   1        X0.Xflg = FALSE;
  74   1        X0.Kflg = FALSE;
  75   1        X0.KNum = FALSE;
  76   1      
  77   1        X1.XCount = 0;
  78   1        X1.Xflg = FALSE;
  79   1        X1.Kflg = FALSE;
  80   1        X1.KNum = FALSE;
  81   1      
  82   1        X2.XCount = 0;
  83   1        X2.Xflg = FALSE;
  84   1        X2.Kflg = FALSE;
  85   1        X2.KNum = FALSE;
  86   1        
  87   1        X3.XCount = 0;
  88   1        X3.Xflg = FALSE;
  89   1        X3.Kflg = FALSE;
  90   1        X3.KNum = FALSE;
  91   1      }
  92          /*******************************************************************************
  93          * Function Name  : Key_Filtrate
  94          * Description    : 
  95          * Input          : None
  96          * Output         : X1.Kflg  按键按下标志（脉冲有效）    X1.Xflg 端子按下标志（电平有效）
  97          * Return         : None
  98          *******************************************************************************/
  99          
 100          void Key_Filtrate(void)
 101          {
 102   1        //if((Ctl.State != MOTOR_NORMAL)&&(u8KeyForbid != 0X7F))    //X1 X2 在停机下有效
 103   1        {
 104   2          //X0
 105   2          #if(X0_EN)
                  if(X0_GPIO_PIN)  
                  {
                    X0.XCount++;
                    if(X0.KNum == TRUE)            //如果按键滤波ok，等待按键释放
                    {
                      X0.Kflg = TRUE;              //按键按下并释放
                    }
                  }
                  else
                  {
                    X0.XCount--;                   //按键按下计时
C51 COMPILER V9.52.0.0   MC_KEY                                                            08/07/2017 14:18:19 PAGE 3   

                  }
              
                  if(X0.XCount >= KEY_FILTERCOUNT)
                  {
                    X0.Xflg = FALSE;               //端子
                    
                    X0.XCount = KEY_FILTERCOUNT;
                  }
                  else if(X0.XCount <= -KEY_FILTERCOUNT) 
                  {
                    X0.Xflg = TRUE;                //端子按下
                    X0.KNum = TRUE;                //按键
                    
                    X0.XCount = -KEY_FILTERCOUNT;
                  }
                #endif
 133   2      
 134   2        #if(X1_EN)
 135   2          //X1
 136   2          if(X1_GPIO_PIN)  
 137   2          {
 138   3            X1.XCount++;
 139   3            if(X1.KNum == TRUE)            //如果按键滤波ok，等待按键释放
 140   3            {
 141   4              X1.Kflg = TRUE;              //按键按下并释放
 142   4            }
 143   3          }
 144   2          else
 145   2          {
 146   3            X1.XCount--;                   //按键按下计时
 147   3          }
 148   2      
 149   2          if(X1.XCount > KEY_FILTERCOUNT)
 150   2          {
 151   3            X1.Xflg = FALSE;               //端子
 152   3            
 153   3            X1.XCount = KEY_FILTERCOUNT;
 154   3          }
 155   2          else if(X1.XCount < -KEY_FILTERCOUNT) 
 156   2          {      X1.Xflg = TRUE;                //端子按下
 157   3            X1.KNum = TRUE;                //按键
 158   3            
 159   3            X1.XCount = -KEY_FILTERCOUNT;
 160   3          }
 161   2        #endif
 162   2      
 163   2        #if(X2_EN)
                  //X2 
                  if(X2_GPIO_PIN)  
                  {
                    X2.XCount++;
                    if(X2.KNum == TRUE)            //如果按键滤波ok，等待按键释放
                    {
                      X2.Kflg = TRUE;              //按键按下并释放
                    }
                  }
                  else
                  {
                    X2.XCount--;                   //按键按下计时
                  }
                  
                  if(X2.XCount > KEY_FILTERCOUNT)
C51 COMPILER V9.52.0.0   MC_KEY                                                            08/07/2017 14:18:19 PAGE 4   

                  {
                    X2.Xflg = FALSE;               //端子
                    
                    X2.XCount = KEY_FILTERCOUNT;
                  }
                  else if(X2.XCount < -KEY_FILTERCOUNT) 
                  {
                    X2.Xflg = TRUE;                //端子按下
                    X2.KNum = TRUE;                //按键
                    
                    X2.XCount = -KEY_FILTERCOUNT;
                  } 
                #endif
 192   2        }
 193   1        
 194   1        //X3 
 195   1        #if(X3_EN)
                if(X3_GPIO_PIN)  
                {
                  X3.XCount++;
                  if(X3.KNum == TRUE)            //如果按键滤波ok，等待按键释放
                  {
                    X3.Kflg = TRUE;              //按键按下并释放
                  }
                }
                else
                {
                  X3.XCount--;                   //按键按下计时
                }
              
                if(X3.XCount > KEY_FILTERCOUNT)
                {
                  X3.Xflg = FALSE;               //端子
                  
                  X3.XCount = KEY_FILTERCOUNT;
                }
                else if(X3.XCount < -KEY_FILTERCOUNT) 
                {
                  X3.Xflg = TRUE;                //端子按下
                  X3.KNum = TRUE;                //按键
                  
                  X3.XCount = -KEY_FILTERCOUNT;
                }    
                #endif  
 223   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    142    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
